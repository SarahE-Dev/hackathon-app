version: '3.8'

services:
  # Database
  mongodb:
    image: mongo:7
    container_name: hackathon-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: hackathon-platform
    volumes:
      - mongodb_data:/data/db
    networks:
      - hackathon-network
    restart: unless-stopped

  # Cache & Message Queue
  redis:
    image: redis:7-alpine
    container_name: hackathon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hackathon-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API (Development with hot-reload)
  backend:
    image: node:18-alpine
    container_name: hackathon-backend
    working_dir: /app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - BACKEND_PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/hackathon-platform
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-secret-key
      - JWT_REFRESH_SECRET=dev-refresh-secret
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - node_modules_backend:/app/node_modules
      - node_modules_shared:/app/shared/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - hackathon-network
    restart: unless-stopped
    command: sh -c "npm install && npm run dev --workspace=backend"

  # Frontend (Development with hot-reload)
  frontend:
    image: node:18-alpine
    container_name: hackathon-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
    volumes:
      - ./frontend:/app/frontend
      - ./shared:/app/shared
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - node_modules_frontend:/app/node_modules
      - node_modules_shared:/app/shared/node_modules
    depends_on:
      - backend
    networks:
      - hackathon-network
    restart: unless-stopped
    command: sh -c "npm install && npm run dev --workspace=frontend"

  # Code Runner Worker (Development)
  code-runner:
    image: node:18-alpine
    container_name: hackathon-code-runner
    working_dir: /app
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CODE_RUNNER_TIMEOUT=5000
      - CODE_RUNNER_MEMORY_LIMIT=128
    volumes:
      - ./code-runner:/app/code-runner
      - ./shared:/app/shared
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - node_modules_runner:/app/node_modules
      - node_modules_shared:/app/shared/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - redis
    networks:
      - hackathon-network
    restart: unless-stopped
    command: sh -c "npm install && npm run dev:runner --workspace=code-runner"

volumes:
  mongodb_data:
  redis_data:
  node_modules_backend:
  node_modules_frontend:
  node_modules_runner:
  node_modules_shared:

networks:
  hackathon-network:
    driver: bridge
